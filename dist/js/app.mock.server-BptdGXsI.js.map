{"version":3,"file":"app.mock.server-BptdGXsI.js","sources":["../../mock/country.js","../../mock/customer.js","../../mock/event.js","../../mock/icons.js","../../mock/node.js","../../mock/photo.js","../../mock/product.js","../../mock/user.js"],"sourcesContent":["import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nimport countries from './data/countries.json'\n\nexport default defineFakeRoute([\n  {\n    url: '/demo/data/countries.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data: countries\n      }\n    }\n  }\n])\n","import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nimport customers_small from './data/customers-small.json'\nimport customers_medium from './data/customers-medium.json'\nimport customers_large from './data/customers-large.json'\nimport customers_xlarge from './data/customers-xlarge.json'\n\nexport default defineFakeRoute([\n  {\n    url: '/demo/data/customers-small.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data: customers_small\n      }\n    }\n  },\n  {\n    url: '/demo/data/customers-medium.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data: customers_medium\n      }\n    }\n  },\n  {\n    url: '/demo/data/customers-large.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data: customers_large\n      }\n    }\n  },\n  {\n    url: '/demo/data/customers-xlarge.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data: customers_xlarge\n      }\n    }\n  }\n])\n","import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nimport events from './data/events.json'\n\nexport default defineFakeRoute([\n  {\n    url: '/demo/data/events.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data: events\n      }\n    }\n  }\n])\n","import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nimport icons from './data/icons.json'\n\nexport default defineFakeRoute([\n  {\n    url: '/demo/data/icons.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data: icons\n      }\n    }\n  }\n])\n","import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nimport treetablenodes from './data/treetablenodes.json'\nimport treenodes from './data/treenodes.json'\n\nexport default defineFakeRoute([\n  {\n    url: '/demo/data/treetablenodes.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data:  treetablenodes\n      }\n    }\n  },\n  {\n    url: '/demo/data/treenodes.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data:  treenodes\n      }\n    }\n  }\n])\n","import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nimport photos from './data/photos.json'\n\nexport default defineFakeRoute([\n  {\n    url: '/demo/data/photos.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data:  photos\n      }\n    }\n  }\n])\n","import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nimport products from './data/products.json'\nimport products_small from './data/products-small.json'\nimport products_orders_small from './data/products-orders-small.json'\n\nexport default defineFakeRoute([\n  {\n    url: '/demo/data/products.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data:  products\n      }\n    }\n  },\n  {\n    url: '/demo/data/products-small.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data:  products_small\n      }\n    }\n  },\n  {\n    url: '/demo/data/products-orders-small.json',\n    method: 'GET',\n    response: () => {\n      return {\n        code: 20000,\n        data:  products_orders_small\n      }\n    }\n  }\n])\n","import { defineFakeRoute } from 'vite-plugin-fake-server/client'\n\nconst tokens = {\n  admin: {\n    token: 'admin-token'\n  },\n  editor: {\n    token: 'editor-token'\n  }\n}\n\nconst users = {\n  'admin-token': {\n    roles: ['admin'],\n    introduction: 'I am a super administrator',\n    avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n    name: 'Super Admin'\n  },\n  'editor-token': {\n    roles: ['editor'],\n    introduction: 'I am an editor',\n    avatar: 'https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif',\n    name: 'Normal Editor'\n  }\n}\n\nexport default defineFakeRoute([\n  {\n    url: '/sys/user/login',\n    method: 'POST',\n    response: ({ body }) => {\n      const token = tokens[body.username]\n\n      if (!token) {\n        return {\n          code: 60204,\n          message: 'Account and password are incorrect.'\n        }\n      }\n\n      return {\n        code: 20000,\n        data: token\n      }\n    }\n  },\n  {\n    url: '/sys/user/info',\n    method: 'GET',\n    response: ({ query }) => {\n      const info = users[query.token]\n\n      if (!info) {\n        return {\n          code: 50008,\n          message: 'Login failed, unable to GET user details.'\n        }\n      }\n\n      return {\n        code: 20000,\n        data: info\n      }\n    }\n  },\n  {\n    url: '/sys/user/logout',\n    method: 'POST',\n    response: () => {\n      return {\n        code: 20000,\n        data: 'success'\n      }\n    }\n  }\n])\n"],"names":["country","defineFakeRoute","countries","customer","customers_small","customers_medium","customers_large","customers_xlarge","event","events","icons","node","treetablenodes","treenodes","photo","photos","product","products","products_small","products_orders_small","tokens","users","user","body","token","query","info"],"mappings":"ozLAIAA,EAAeC,EAAgB,CAC7B,CACE,IAAK,4BACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAMC,CACP,EAEJ,CACH,CAAC,+wzICRDC,EAAeF,EAAgB,CAC7B,CACE,IAAK,kCACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAMG,CACP,EAEJ,EACD,CACE,IAAK,mCACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAMC,CACP,EAEJ,EACD,CACE,IAAK,kCACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAMC,CACP,EAEJ,EACD,CACE,IAAK,mCACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAMC,CACP,EAEJ,CACH,CAAC,kuBC5CDC,EAAeP,EAAgB,CAC7B,CACE,IAAK,yBACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAMQ,CACP,EAEJ,CACH,CAAC,kh9TCXDC,EAAeT,EAAgB,CAC7B,CACE,IAAK,wBACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAMS,CACP,EAEJ,CACH,CAAC,o6HCVDC,EAAeV,EAAgB,CAC7B,CACE,IAAK,iCACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAOW,CACR,EAEJ,EACD,CACE,IAAK,4BACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAOC,CACR,EAEJ,CACH,CAAC,0mECtBDC,EAAeb,EAAgB,CAC7B,CACE,IAAK,yBACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAOc,CACR,EAEJ,CACH,CAAC,utUCTDC,EAAef,EAAgB,CAC7B,CACE,IAAK,2BACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAOgB,CACR,EAEJ,EACD,CACE,IAAK,iCACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAOC,CACR,EAEJ,EACD,CACE,IAAK,wCACL,OAAQ,MACR,SAAU,KACD,CACL,KAAM,IACN,KAAOC,CACR,EAEJ,CACH,CAAC,yGCnCKC,EAAS,CACb,MAAO,CACL,MAAO,aACR,EACD,OAAQ,CACN,MAAO,cACR,CACH,EAEMC,EAAQ,CACZ,cAAe,CACb,MAAO,CAAC,OAAO,EACf,aAAc,6BACd,OAAQ,sEACR,KAAM,aACP,EACD,eAAgB,CACd,MAAO,CAAC,QAAQ,EAChB,aAAc,iBACd,OAAQ,sEACR,KAAM,eACP,CACH,EAEAC,EAAerB,EAAgB,CAC7B,CACE,IAAK,kBACL,OAAQ,OACR,SAAU,CAAC,CAAE,KAAAsB,KAAW,CACtB,MAAMC,EAAQJ,EAAOG,EAAK,QAAQ,EAElC,OAAKC,EAOE,CACL,KAAM,IACN,KAAMA,CACP,EATQ,CACL,KAAM,MACN,QAAS,qCACV,CAOJ,CACF,EACD,CACE,IAAK,iBACL,OAAQ,MACR,SAAU,CAAC,CAAE,MAAAC,KAAY,CACvB,MAAMC,EAAOL,EAAMI,EAAM,KAAK,EAE9B,OAAKC,EAOE,CACL,KAAM,IACN,KAAMA,CACP,EATQ,CACL,KAAM,MACN,QAAS,2CACV,CAOJ,CACF,EACD,CACE,IAAK,mBACL,OAAQ,OACR,SAAU,KACD,CACL,KAAM,IACN,KAAM,SACP,EAEJ,CACH,CAAC"}